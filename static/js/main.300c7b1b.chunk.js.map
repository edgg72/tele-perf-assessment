{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/instance.js","components/Signup.js","components/Dashboard.js","components/Login.js","components/PrivateRoute.js","components/ForgotPassword.js","components/UpdateProfile.js","components/App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","axios","create","baseURL","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","userTypeRef","adminTypeRef","error","setError","history","useHistory","e","a","preventDefault","current","checked","data","type","instance","post","then","res","push","Card","Body","className","Alert","variant","Form","onSubmit","Group","id","Label","Control","required","ref","Check","name","label","Button","disabled","to","Dashboard","userType","setUserType","get","item","onClick","Login","PrivateRoute","Component","component","rest","render","props","ForgotPassword","message","setMessage","UpdateProfile","promises","Promise","all","catch","finally","defaultValue","placeholder","App","Container","style","minHeight","maxWidth","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.300c7b1b.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\n\r\nconst app = firebase.initializeApp({\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY ,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n})\r\n\r\nexport const auth = app.auth();\r\nexport default app;","import React, { useContext, useState, useEffect } from 'react';\r\nimport { auth } from '../firebase';\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext)\r\n}\r\n\r\nexport  function AuthProvider({ children }) {\r\n    const [currentUser, setCurrentUser] = useState();\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    function signup(email, password) {\r\n        return auth.createUserWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    function login(email, password) {\r\n        return auth.signInWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    function logout() {\r\n        return auth.signOut();\r\n    }\r\n\r\n    function resetPassword(email) {\r\n        return auth.sendPasswordResetEmail(email)\r\n    }\r\n\r\n    function updateEmail(email) {\r\n        return currentUser.updateEmail(email)\r\n    }\r\n\r\n    function updatePassword(password) {\r\n        return currentUser.updatePassword(password)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n            setCurrentUser(user);\r\n            setLoading(false)\r\n        })\r\n        return unsubscribe\r\n    }, [])\r\n\r\n\r\n    const value = {\r\n        currentUser,\r\n        login,\r\n        signup,\r\n        logout,\r\n        resetPassword,\r\n        updateEmail,\r\n        updatePassword\r\n    }\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children }\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: \"https://auth-test-7cc30-default-rtdb.firebaseio.com/\"\r\n})","import React, { useRef, useState } from 'react';\r\nimport { Card, Form, Button, Alert } from 'react-bootstrap';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport instance from './instance';\r\n\r\nexport default function Signup() {\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n    const passwordConfirmRef = useRef();\r\n    const userTypeRef = useRef();\r\n    const adminTypeRef = useRef();\r\n    const { signup } = useAuth();\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const history = useHistory();\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError('Passwords do not match')\r\n        }\r\n        try {\r\n            setError('')\r\n            setLoading(true)\r\n            if(userTypeRef.current.checked){\r\n                const data = {email: emailRef.current.value, type: userTypeRef.current.value}\r\n                instance.post('/users.json', data).then(res => {\r\n                })\r\n            }\r\n            if(adminTypeRef.current.checked){\r\n                const data = {email: emailRef.current.value, type: adminTypeRef.current.value}\r\n                instance.post('/users.json', data).then(res => {\r\n                })\r\n            }\r\n            await signup(emailRef.current.value, passwordRef.current.value)\r\n            history.push('/')\r\n\r\n        } catch {\r\n            setError('Failed to create an account')\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4 \" >Sign Up</h2>\r\n                    {error && <Alert variant=\"danger\" >{error}</Alert>}\r\n                    <Form onSubmit={handleSubmit} >\r\n                        <Form.Group id=\"email\" >\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" required ref={emailRef} ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password\" >\r\n                            <Form.Label className=\"mt-2\">Password</Form.Label>\r\n                            <Form.Control type=\"password\" required ref={passwordRef} ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password-confirm\" >\r\n                            <Form.Label className=\"mt-2\">Password Confirmation</Form.Label>\r\n                            <Form.Control type=\"password\" required ref={passwordConfirmRef} ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mt-2\" id=\"user-type\" >\r\n                            <Form.Label>Type of user</Form.Label>\r\n                            <Form.Check type=\"radio\" name=\"user-type\" ref={userTypeRef} value=\"user\" required label=\"Regular user\"  ></Form.Check>\r\n                            <Form.Check type=\"radio\" name=\"user-type\" ref={adminTypeRef} value =\"admin\" required  label=\"Admin\" ></Form.Check>\r\n                        </Form.Group>\r\n                        <Button disabled={loading} className=\"w-100 mt-3\" type=\"submit\" >Sign Up</Button>\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 text-center mt-2\" >\r\n                Already have an account? <Link to=\"/login\" >Log In</Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Card, Button, Alert } from 'react-bootstrap'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport instance from './instance'\r\n\r\nexport default function Dashboard() {\r\n\r\n    const [error, setError] = useState('');\r\n    const { currentUser, logout } = useAuth();\r\n    const [userType, setUserType] = useState('');\r\n\r\n    useEffect(() => {\r\n        instance.get('/users.json').then(res => {\r\n            for (const item in res.data) {\r\n                if (res.data[item].email === currentUser.email){\r\n                    setUserType(res.data[item].type)\r\n                }\r\n            }\r\n        })\r\n    }, [currentUser.email])\r\n\r\n    const history = useHistory();\r\n\r\n    async function  handleLogout() {\r\n        setError('')\r\n        try {\r\n            await logout()\r\n            history.push('/login')\r\n        } catch {\r\n            setError('Failed to log out')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\" >Profile</h2>\r\n                    {error && <Alert variant=\"danger\" >{error}</Alert>}\r\n                    <strong className=\"m-2\">Email: </strong>{currentUser.email}\r\n                    <strong className=\"m-2\" >User type: </strong>{userType}\r\n                    <Link to=\"/update-profile\" className=\"btn btn-primary w-100 mt-3\">Update Profile</Link>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 mt-2 text-center\" >\r\n                <Button variant=\"link\" onClick={handleLogout} >Log Out</Button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useRef, useState } from 'react';\r\nimport { Card, Form, Button, Alert } from 'react-bootstrap';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nexport default function Login() {\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n    const { login } = useAuth();\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const history = useHistory();\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        try {\r\n            setError('')\r\n            setLoading(true)\r\n            await login(emailRef.current.value, passwordRef.current.value)\r\n            history.push('/')\r\n        } catch {\r\n            setError('Failed to sign in')\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\" >Log In</h2>\r\n                    {error && <Alert variant=\"danger\" >{error}</Alert>}\r\n                    <Form onSubmit={handleSubmit} >\r\n                        <Form.Group id=\"email\" >\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" required ref={emailRef} ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password\" >\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" required ref={passwordRef} ></Form.Control>\r\n                        </Form.Group>\r\n                        <Button disabled={loading} className=\"w-100 mt-3\" type=\"submit\" >Log In</Button>\r\n                    </Form>\r\n                    <div className=\"w-100 mt-3 text-center\" >\r\n                        <Link to=\"/forgot-password\">Forgot Password?</Link>\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 mt-2 text-center\" >\r\n                Need an account? <Link to=\"/signup\" >Sign Up</Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { useAuth } from '../contexts/AuthContext'\r\n\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n\r\n    const { currentUser } = useAuth();\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props => {\r\n                return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n            }}\r\n        ></Route>\r\n    )\r\n}\r\n","import React, { useRef, useState } from 'react';\r\nimport { Card, Form, Button, Alert } from 'react-bootstrap';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function ForgotPassword() {\r\n    const emailRef = useRef();\r\n    const { resetPassword } = useAuth();\r\n    const [error, setError] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        try {\r\n            setMessage('')\r\n            setError('')\r\n            setLoading(true)\r\n            await resetPassword(emailRef.current.value)\r\n            setMessage('Check your inbox for further instructions')\r\n        } catch {\r\n            setError('Failed to reset password')\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\" >Password Reset</h2>\r\n                    {error && <Alert variant=\"danger\" >{error}</Alert>}\r\n                    {message && <Alert variant=\"success\" >{message}</Alert>}\r\n                    <Form onSubmit={handleSubmit} >\r\n                        <Form.Group id=\"email\" >\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" required ref={emailRef} ></Form.Control>\r\n                        </Form.Group>\r\n                        <Button disabled={loading} className=\"w-100 mt-3\" type=\"submit\" >Reset Password</Button>\r\n                    </Form>\r\n                    <div className=\"w-100 mt-3 text-center\" >\r\n                        <Link to=\"/login\">Login</Link>\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 mt-2 text-center\" >\r\n                Need an account? <Link to=\"/signup\" >Sign Up</Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useRef, useState } from 'react';\r\nimport { Card, Form, Button, Alert } from 'react-bootstrap';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nexport default function UpdateProfile() {\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n    const passwordConfirmRef = useRef();\r\n    const { currentUser, updatePassword, updateEmail } = useAuth();\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const history = useHistory();\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError('Passwords do not match')\r\n        }\r\n\r\n        const promises = []\r\n        setLoading(true)\r\n        setError('')\r\n        if (emailRef.current.value !== currentUser.email){\r\n            promises.push(updateEmail(emailRef.current.value))\r\n        }\r\n        if (passwordRef.current.value) {\r\n            promises.push(updatePassword(passwordRef.current.value))\r\n        }\r\n        Promise.all(promises).then(() => {\r\n            history.push('/')\r\n        }).catch(() => {\r\n            setError('Failed to update account')\r\n        }).finally(() => {\r\n            setLoading(false)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\" >Update Profile</h2>\r\n                    {error && <Alert variant=\"danger\" >{error}</Alert>}\r\n                    <Form onSubmit={handleSubmit} >\r\n                        <Form.Group id=\"email\" >\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" required ref={emailRef} defaultValue={currentUser.email} ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password\" >\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\"  ref={passwordRef} placeholder=\"Leave blank to keep the same\" ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password-confirm\" >\r\n                            <Form.Label>Password Confirmation</Form.Label>\r\n                            <Form.Control type=\"password\"  ref={passwordConfirmRef} placeholder=\"Leave blank to keep the same\" ></Form.Control>\r\n                        </Form.Group>\r\n                        <Button disabled={loading} className=\"w-100 mt-3\" type=\"submit\" >Update</Button>\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 text-center mt-2\" >\r\n                <Link to=\"/\" >Cancel</Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport Signup from './Signup';\nimport { Container } from 'react-bootstrap';\nimport { AuthProvider } from '../contexts/AuthContext';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Dashboard from './Dashboard';\nimport Login from './Login';\nimport PrivateRoute from './PrivateRoute';\nimport ForgotPassword from './ForgotPassword';\nimport UpdateProfile from './UpdateProfile';\n\nfunction App() {\n  return (\n\n      <Container className=\"d-flex align-items-center\n        justify-content-center\"\n        style={{ minHeight: \"100vh\" }}\n      >\n        <div className=\"w-100\" style={{ maxWidth: \"400px\" }} >\n          <Router>\n            <AuthProvider>\n              <Switch>\n                <PrivateRoute exact path=\"/\" component={Dashboard} />\n                <PrivateRoute path=\"/update-profile\" component={UpdateProfile} />\n                <Route path=\"/signup\" component={Signup} />\n                <Route path=\"/login\" component={Login} />\n                <Route path=\"/forgot-password\" component={ForgotPassword} />\n              </Switch>\n            </AuthProvider>\n          </Router>\n        </div>\n      </Container>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}